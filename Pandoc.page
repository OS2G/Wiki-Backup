---
format: markdown
title: Pandoc
categories: FAQ Resources CoolTools
...

Pandoc
======

If your like me and love to use markdown you may find yourself sad that
you have to learn Media Wiki markup. Fear not
[Pandoc](http://pandoc.org/) to the rescue! It can convert any text
markup file to any other text markup file!!! (((mostly)))

#### *From the Pandoc main page*

If you need to convert files from one markup format into another, pandoc
is your swiss-army knife. Pandoc can convert documents in
[markdown](http://daringfireball.net/projects/markdown/),
[reStructuredText](http://docutils.sourceforge.net/docs/ref/rst/introduction.html),
[textile](http://redcloth.org/textile),
[HTML](http://www.w3.org/TR/html40/),
[DocBook](http://www.docbook.org/),
[LaTeX](http://www.latex-project.org/), [MediaWiki
markup](http://www.mediawiki.org/wiki/Help:Formatting), [TWiki
markup](http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules),
[OPML](http://dev.opml.org/spec2.html), Emacs
[Org-Mode](http://orgmode.org/), [Txt2Tags](http://txt2tags.org/),
Microsoft Word
[docx](http://www.microsoft.com/interop/openup/openxml/default.aspx),
LibreOffice [ODT](http://en.wikipedia.org/wiki/OpenDocument),
[EPUB](http://en.wikipedia.org/wiki/EPUB), or [Haddock
markup](http://www.haskell.org/haddock/doc/html/ch03s08.html) to

-   HTML formats: XHTML, HTML5, and HTML slide shows using
    [Slidy](http://www.w3.org/Talks/Tools/Slidy),
    [reveal.js](http://lab.hakim.se/reveal-js/),
    [Slideous](http://goessner.net/articles/slideous/),
    [S5](http://meyerweb.com/eric/tools/s5/), or
    [DZSlides](http://paulrouget.com/dzslides/).
-   Word processor formats: Microsoft Word
    [docx](http://www.microsoft.com/interop/openup/openxml/default.aspx),
    OpenOffice/LibreOffice
    [ODT](http://en.wikipedia.org/wiki/OpenDocument), [OpenDocument
    XML](http://opendocument.xml.org/)
-   Ebooks: [EPUB](http://en.wikipedia.org/wiki/EPUB) version 2 or 3,
    [FictionBook2](http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1)
-   Documentation formats: [DocBook](http://www.docbook.org/), [TEI
    Simple](https://github.com/TEIC/TEI-Simple), [GNU
    TexInfo](http://www.gnu.org/software/texinfo/), [Groff
    man](http://www.gnu.org/software/groff/groff.html) pages, [Haddock
    markup](http://www.haskell.org/haddock/doc/html/ch03s08.html)
-   Page layout formats: [InDesign
    ICML](https://www.adobe.com/content/dam/Adobe/en/devnet/indesign/cs55-docs/IDML/idml-specification.pdf)
-   Outline formats: [OPML](http://dev.opml.org/spec2.html)
-   TeX formats: [LaTeX](http://www.latex-project.org/),
    [ConTeXt](http://www.pragma-ade.nl/), LaTeX Beamer slides
-   [PDF](http://en.wikipedia.org/wiki/Portable_Document_Format) via
    LaTeX
-   Lightweight markup formats:
    [Markdown](http://daringfireball.net/projects/markdown/) (including
    [CommonMark](http://commonmark.org/)),
    [reStructuredText](http://docutils.sourceforge.net/docs/ref/rst/introduction.html),
    [AsciiDoc](http://www.methods.co.nz/asciidoc/), [MediaWiki
    markup](http://www.mediawiki.org/wiki/Help:Formatting), [DokuWiki
    markup](https://www.dokuwiki.org/wiki:syntax), Emacs
    [Org-Mode](http://orgmode.org/),
    [Textile](http://redcloth.org/textile)
-   Custom formats: custom writers can be written in
    [lua](http://www.lua.org/).

Pandoc understands a number of useful markdown syntax extensions,
including document metadata (title, author, date); footnotes; tables;
definition lists; superscript and subscript; strikeout; enhanced ordered
lists (start number and numbering style are significant); running
example lists; delimited code blocks with syntax highlighting; smart
quotes, dashes, and ellipses; markdown inside HTML blocks; and inline
LaTeX. If strict markdown compatibility is desired, all of these
extensions can be turned off.

Installation
------------

If you're unfamiliar with working with the command line please continue
reading here. If not here's a link to the [man
page](http://pandoc.org/MANUAL.html)!

Step 1: Install pandoc
----------------------

First, install according to your
[platform](http://pandoc.org/installing.html).

Step 2: Open a terminal
-----------------------

Pandoc is a command-line tool. There is no graphic user interface. So,
to use it, you'll need to open a terminal window:

-   On OS X, the Terminal application can be found in
    &lt;code&gt;/Applications/Utilities&lt;/code&gt;. Open a Finder
    window and go to &lt;code&gt;Applications&lt;/code&gt;, then
    &lt;code&gt;Utilities&lt;/code&gt;. Then double click on
    &lt;code&gt;Terminal&lt;/code&gt;. (Or, click the spotlight icon in
    the upper right hand corner of your screen and type
    &lt;code&gt;Terminal&lt;/code&gt; -- you should see
    &lt;code&gt;Terminal&lt;/code&gt; under
    &lt;code&gt;Applications&lt;/code&gt;.)
-   On Windows, you can use either the classic command prompt or the
    more modern PowerShell terminal. If you use Windows in desktop mode,
    run the &lt;code&gt;cmd&lt;/code&gt; or
    &lt;code&gt;powershell&lt;/code&gt; command from the Start menu. If
    you use the Windows 8 start screen instead, simply type
    &lt;code&gt;cmd&lt;/code&gt; or &lt;code&gt;powershell&lt;/code&gt;,
    and then run either the &quot;Command Prompt&quot; or &quot;Windows
    Powershell&quot; application.
-   On Linux, there are many possible configurations, depending on what
    desktop environment you're using:
    -   In Unity, use the search function on the
        &lt;code&gt;Dash&lt;/code&gt;, and search for
        &lt;code&gt;Terminal&lt;/code&gt;. Or, use the keyboard shortcut
        &lt;code&gt;Ctrl-Alt-T&lt;/code&gt;.
    -   In Gnome, go to &lt;code&gt;Applications&lt;/code&gt;, then
        &lt;code&gt;Accessories&lt;/code&gt;, and select
        &lt;code&gt;Terminal&lt;/code&gt;, or use
        &lt;code&gt;Ctrl-Alt-T&lt;/code&gt;.
    -   In XFCE, go to &lt;code&gt;Applications&lt;/code&gt;, then
        &lt;code&gt;System&lt;/code&gt;, then
        &lt;code&gt;Terminal&lt;/code&gt;, or use
        &lt;code&gt;Super-T&lt;/code&gt;.
    -   In KDE, go to &lt;code&gt;KMenu&lt;/code&gt;, then
        &lt;code&gt;System&lt;/code&gt;, then &lt;code&gt;Terminal
        Program (Konsole)&lt;/code&gt;.

You should now see a rectangle with a &quot;prompt&quot; (possibly just
a symbol like &lt;code&gt;%&lt;/code&gt;, but probably including more
information, such as your username and directory), and a blinking
cursor.

Let's verify that pandoc is installed. Type

&lt;code&gt;pandoc —version&lt;/code&gt; and hit enter. You should see a
message telling you which version of pandoc is installed, and giving you
some additional information.

Step 3: Changing directories
----------------------------

First, let's see where we are. Type

&lt;code&gt;pwd&lt;/code&gt; on linux or OSX, or

&lt;code&gt;echo %cd%&lt;/code&gt; on Windows, and hit enter. Your
terminal should print your current working directory. (Guess what
&lt;code&gt;pwd&lt;/code&gt; stands for?) This should be your home
directory.

Let's navigate now to our &lt;code&gt;Documents&lt;/code&gt; directory:
type

&lt;code&gt;cd Documents&lt;/code&gt; and hit enter. Now type

&lt;code&gt;pwd&lt;/code&gt; (or &lt;code&gt;echo %cd%&lt;/code&gt; on
Windows) again. You should be in the &lt;code&gt;Documents&lt;/code&gt;
subdirectory of your home directory. To go back to your home directory,
you could type

&lt;code&gt;cd ..&lt;/code&gt; The &lt;code&gt;..&lt;/code&gt; means
&quot;one level up.&quot;

Go back to your &lt;code&gt;Documents&lt;/code&gt; directory if you're
not there already. Let's try creating a subdirectory called
&lt;code&gt;pandoc-test&lt;/code&gt;:

&lt;code&gt;mkdir pandoc-test&lt;/code&gt; Now change to the
&lt;code&gt;pandoc-test&lt;/code&gt; directory:

&lt;code&gt;cd pandoc-test&lt;/code&gt; If the prompt doesn't tell you
what directory you're in, you can confirm that you're there by doing

&lt;code&gt;pwd&lt;/code&gt; (or &lt;code&gt;echo %cd%&lt;/code&gt;)
again.

OK, that's all you need to know for now about using the terminal. But
here's a secret that will save you a lot of typing. You can always type
the up-arrow key to go back through your history of commands. So if you
want to use a command you typed earlier, you don't need to type it
again: just use up-arrow until it comes up. Try this. (You can use
down-arrow as well, to go the other direction.) Once you have the
command, you can also use the left and right arrows and the
backspace/delete key to edit it.

Most terminals also support tab completion of directories and filenames.
To try this, let's first go back up to our
&lt;code&gt;Documents&lt;/code&gt; directory:

&lt;code&gt;cd ..&lt;/code&gt; Now, type

&lt;code&gt;cd pandoc-&lt;/code&gt; and hit the tab key instead of
enter. Your terminal should fill in the rest
(&lt;code&gt;test&lt;/code&gt;), and then you can hit enter.

To review:

-   &lt;code&gt;pwd&lt;/code&gt; (or &lt;code&gt;echo %cd%&lt;/code&gt;
    on Windows) to see what the current working directory is.
-   &lt;code&gt;cd foo&lt;/code&gt; to change to the
    &lt;code&gt;foo&lt;/code&gt; subdirectory of your working directory.
-   &lt;code&gt;cd ..&lt;/code&gt; to move up to the parent of the
    working directory.
-   &lt;code&gt;mkdir foo&lt;/code&gt; to create a subdirectory called
    &lt;code&gt;foo&lt;/code&gt; in the working directory.
-   up-arrow to go back through your command history.
-   tab to complete directories and file names.

Step 4: Using pandoc as a filter
--------------------------------

Type

&lt;code&gt;pandoc&lt;/code&gt; and hit enter. You should see the cursor
just sitting there, waiting for you to type something. Type this:

&lt;code&gt;Hello \*pandoc\*!

- one - two&lt;/code&gt; When you're finished (the cursor should be at
the beginning of the line), type &lt;code&gt;Ctrl-D&lt;/code&gt; on OS X
or Linux, or &lt;code&gt;Ctrl-Z&lt;/code&gt; followed by
&lt;code&gt;Enter&lt;/code&gt; on Windows. You should now see your text
converted to HTML!

&lt;code&gt;&lt;p&gt;Hello &lt;em&gt;pandoc&lt;/em&gt;!&lt;/p&gt;
&lt;ul&gt; &lt;li&gt;one&lt;/li&gt; &lt;li&gt;two&lt;/li&gt;
&lt;/ul&gt;&lt;/code&gt; What just happened? When pandoc is invoked
without specifying any input files, it operates as a &quot;filter,&quot;
taking input from the terminal and sending its output back to the
terminal. You can use this feature to play around with pandoc.

By default, input is interpreted as pandoc markdown, and output is HTML.
But we can change that. Let's try converting *from* HTML *to* markdown:

&lt;code&gt;pandoc -f html -t markdown&lt;/code&gt; Now type:

&lt;code&gt;&lt;p&gt;Hello
&lt;em&gt;pandoc&lt;/em&gt;!&lt;/p&gt;&lt;/code&gt; and hit
&lt;code&gt;Ctrl-D&lt;/code&gt; (or &lt;code&gt;Ctrl-Z&lt;/code&gt;
followed by &lt;code&gt;Enter&lt;/code&gt; on Windows). You should see:

&lt;code&gt;Hello \*pandoc\*!&lt;/code&gt; Now try converting something
from markdown to LaTeX. What command do you think you should use?

Step 5: Text editor basics
--------------------------

You'll probably want to use pandoc to convert a file, not to read text
from the terminal. That's easy, but first we need to create a text file
in our &lt;code&gt;pandoc-test&lt;/code&gt; subdirectory.

**Important:** To create a text file, you'll need to use a text editor,
*not* a word processor like Microsoft Word. On Windows, you can use
Notepad (in &lt;code&gt;Accessories&lt;/code&gt;). On OS X, you can use
&lt;code&gt;TextEdit&lt;/code&gt; (in
&lt;code&gt;Applications&lt;/code&gt;). On Linux, different platforms
come with different text editors: Gnome has
&lt;code&gt;GEdit&lt;/code&gt;, and KDE has
&lt;code&gt;Kate&lt;/code&gt;.

Start up your text editor. Type the following:

&lt;code&gt;\# Test!

This is a test of \*pandoc\*.

- list one - list two&lt;/code&gt; Now save your file as
&lt;code&gt;test1.md&lt;/code&gt; in the directory
&lt;code&gt;Documents/pandoc-test&lt;/code&gt;.

Note: If you use plain text a lot, you'll want a better editor than
&lt;code&gt;Notepad&lt;/code&gt; or &lt;code&gt;TextEdit&lt;/code&gt;.
You might want to look at [Sublime Text](http://www.sublimetext.com/) or
(if you're willing to put in some time learning an unfamiliar interface)
[Vim](http://www.vim.org/) or
[Emacs](http://www.gnu.org/software/emacs).

Step 6: Converting a file
-------------------------

Go back to your terminal. We should still be in the
&lt;code&gt;Documents/pandoc-test&lt;/code&gt; directory. Verify that
with &lt;code&gt;pwd&lt;/code&gt;.

Now type

&lt;code&gt;ls&lt;/code&gt; (or &lt;code&gt;dir&lt;/code&gt; if you're
on Windows). This will list the files in the current directory. You
should see the file you created, &lt;code&gt;test1.md&lt;/code&gt;.

To convert it to HTML, use this command:

&lt;code&gt;pandoc test1.md -f markdown -t html -s -o
test1.html&lt;/code&gt; The filename &lt;code&gt;test1.md&lt;/code&gt;
tells pandoc which file to convert. The &lt;code&gt;-s&lt;/code&gt;
option says to create a &quot;standalone&quot; file, with a header and
footer, not just a fragment. And the &lt;code&gt;-o
test1.html&lt;/code&gt; says to put the output in the file
&lt;code&gt;test1.html&lt;/code&gt;. Note that we could have omitted
&lt;code&gt;-f markdown&lt;/code&gt; and &lt;code&gt;-t
html&lt;/code&gt;, since the default is to convert from markdown to
HTML, but it doesn't hurt to include them.

Check that the file was created by typing &lt;code&gt;ls&lt;/code&gt;
again. You should see &lt;code&gt;test1.html&lt;/code&gt;. Now open this
in a browser. On OS X, you can type

&lt;code&gt;open test1.html&lt;/code&gt; On Windows, type

&lt;code&gt;.\\test1.html&lt;/code&gt; You should see a browser window
with your document.

To create a LaTeX document, you just need to change the command
slightly:

&lt;code&gt;pandoc test1.md -f markdown -t latex -s -o
test1.tex&lt;/code&gt; Try opening &lt;code&gt;test1.tex&lt;/code&gt; in
your text editor.

Pandoc can often figure out the input and output formats from the
filename extensions. So, you could have just used:

&lt;code&gt;pandoc test1.md -s -o test1.tex&lt;/code&gt; Pandoc knows
you're trying to create a LaTeX document, because of the
&lt;code&gt;.tex&lt;/code&gt; extension.

Now try creating a Word document (with extension
&lt;code&gt;docx&lt;/code&gt;).

If you want to create a PDF, you'll need to have LaTeX installed. (See
[MacTeX](http://tug.org/mactex/) on OS X, [MiKTeX](http://miktex.org/)
on Windows, or install the texlive package in linux.) Then do

&lt;code&gt;pandoc test1.md -s -o test1.pdf&lt;/code&gt;

Step 7: Command-line options
----------------------------

You now know the basics. Pandoc has a lot of options. At this point you
can start to learn more about them by reading the [User's
Guide](http://pandoc.org/README.html).

Here's an example. The &lt;code&gt;-S&lt;/code&gt; or
&lt;code&gt;--smart&lt;/code&gt; option (you can use either form) causes
pandoc to produce curly quotes and proper dashes. Try it using pandoc as
a filter. Type

&lt;code&gt;pandoc --smart&lt;/code&gt; then enter this text, followed
by &lt;code&gt;Ctrl-D&lt;/code&gt; (&lt;code&gt;Ctrl-Z&lt;/code&gt;
followed by &lt;code&gt;Enter&lt;/code&gt; on Windows):

&lt;code&gt;“Hello there,” she said---and Sam didn't reply.&lt;/code&gt;
Now try the same thing without &lt;code&gt;--smart&lt;/code&gt;. See the
difference in output?

If you forget an option, or forget which formats are supported, you can
always do

&lt;code&gt;pandoc --help&lt;/code&gt; to get a list of all the
supported options.

On OS X or Linux systems, you can also do

&lt;code&gt;man pandoc&lt;/code&gt; to get the pandoc manual page, or

&lt;code&gt;man pandoc\_markdown&lt;/code&gt; to get a description of
pandoc's markdown syntax. All of this information is also in the User's
Guide.

If you get stuck, you can always ask questions on the
[pandoc-discuss](http://groups.google.com/group/pandoc-discuss) mailing
list. But be sure to check the [FAQs](http://pandoc.org/faqs.html)
first, and search through the mailing list to see if your question has
been answered before.

<Category:FAQ> <Category:Resources> [Category:Cool
Tools](Category:Cool_Tools "wikilink")
