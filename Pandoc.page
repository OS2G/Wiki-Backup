---
format: markdown
title: Pandoc
categories: FAQResourcesCool Tools
...

Pandoc
======

`   If your like me and love to use markdown you may find yourself sad that you have to learn Media Wiki markup. Fear not `[`Pandoc`](http://pandoc.org/)` to the rescue! It can convert any text markup file to any other text markup file!!! (((mostly)))`

`   ==== `*`From`` ``the`` ``Pandoc`` ``main`` ``page`*` ====`

`   If you need to convert files from one markup format into another, pandoc is your swiss-army knife. Pandoc can convert documents in `[`markdown`](http://daringfireball.net/projects/markdown/)`, `[`reStructuredText`](http://docutils.sourceforge.net/docs/ref/rst/introduction.html)`, `[`textile`](http://redcloth.org/textile)`, `[`HTML`](http://www.w3.org/TR/html40/)`, `[`DocBook`](http://www.docbook.org/)`, `[`LaTeX`](http://www.latex-project.org/)`, `[`MediaWiki`` ``markup`](http://www.mediawiki.org/wiki/Help:Formatting)`, `[`TWiki`` ``markup`](http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules)`, `[`OPML`](http://dev.opml.org/spec2.html)`, Emacs `[`Org-Mode`](http://orgmode.org/)`, `[`Txt2Tags`](http://txt2tags.org/)`, Microsoft Word `[`docx`](http://www.microsoft.com/interop/openup/openxml/default.aspx)`, LibreOffice `[`ODT`](http://en.wikipedia.org/wiki/OpenDocument)`, `[`EPUB`](http://en.wikipedia.org/wiki/EPUB)`, or `[`Haddock`` ``markup`](http://www.haskell.org/haddock/doc/html/ch03s08.html)` to`

`   * HTML formats: XHTML, HTML5, and HTML slide shows using `[`Slidy`](http://www.w3.org/Talks/Tools/Slidy)`, `[`reveal.js`](http://lab.hakim.se/reveal-js/)`, `[`Slideous`](http://goessner.net/articles/slideous/)`, `[`S5`](http://meyerweb.com/eric/tools/s5/)`, or `[`DZSlides`](http://paulrouget.com/dzslides/)`.`\
`   * Word processor formats: Microsoft Word `[`docx`](http://www.microsoft.com/interop/openup/openxml/default.aspx)`, OpenOffice/LibreOffice `[`ODT`](http://en.wikipedia.org/wiki/OpenDocument)`, `[`OpenDocument`` ``XML`](http://opendocument.xml.org/)\
`   * Ebooks: `[`EPUB`](http://en.wikipedia.org/wiki/EPUB)` version 2 or 3, `[`FictionBook2`](http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1)\
`   * Documentation formats: `[`DocBook`](http://www.docbook.org/)`, `[`TEI`` ``Simple`](https://github.com/TEIC/TEI-Simple)`, `[`GNU`` ``TexInfo`](http://www.gnu.org/software/texinfo/)`, `[`Groff`` ``man`](http://www.gnu.org/software/groff/groff.html)` pages, `[`Haddock`` ``markup`](http://www.haskell.org/haddock/doc/html/ch03s08.html)\
`   * Page layout formats: `[`InDesign`` ``ICML`](https://www.adobe.com/content/dam/Adobe/en/devnet/indesign/cs55-docs/IDML/idml-specification.pdf)\
`   * Outline formats: `[`OPML`](http://dev.opml.org/spec2.html)\
`   * TeX formats: `[`LaTeX`](http://www.latex-project.org/)`, `[`ConTeXt`](http://www.pragma-ade.nl/)`, LaTeX Beamer slides`\
`   * `[`PDF`](http://en.wikipedia.org/wiki/Portable_Document_Format)` via LaTeX`\
`   * Lightweight markup formats: `[`Markdown`](http://daringfireball.net/projects/markdown/)` (including `[`CommonMark`](http://commonmark.org/)`), `[`reStructuredText`](http://docutils.sourceforge.net/docs/ref/rst/introduction.html)`, `[`AsciiDoc`](http://www.methods.co.nz/asciidoc/)`, `[`MediaWiki`` ``markup`](http://www.mediawiki.org/wiki/Help:Formatting)`, `[`DokuWiki`` ``markup`](https://www.dokuwiki.org/wiki:syntax)`, Emacs `[`Org-Mode`](http://orgmode.org/)`, `[`Textile`](http://redcloth.org/textile)\
`   * Custom formats: custom writers can be written in `[`lua`](http://www.lua.org/)`.`

`   Pandoc understands a number of useful markdown syntax extensions, including document metadata (title, author, date); footnotes; tables; definition lists; superscript and subscript; strikeout; enhanced ordered lists (start number and numbering style are significant); running example lists; delimited code blocks with syntax highlighting; smart quotes, dashes, and ellipses; markdown inside HTML blocks; and inline LaTeX. If strict markdown compatibility is desired, all of these extensions can be turned off.`

`   == Installation ==`

`   If you're unfamiliar with working with the command line please continue reading here. If not here's a link to the `[`man`` ``page`](http://pandoc.org/MANUAL.html)`!`

`   == Step 1: Install pandoc ==`

`   First, install according to your `[`platform`](http://pandoc.org/installing.html)`.`

`   == Step 2: Open a terminal ==`

`   Pandoc is a command-line tool. There is no graphic user interface. So, to use it, you'll need to open a terminal window:`

`   * On OS X, the Terminal application can be found in <code>/Applications/Utilities</code>. Open a Finder window and go to <code>Applications</code>, then <code>Utilities</code>. Then double click on <code>Terminal</code>. (Or, click the spotlight icon in the upper right hand corner of your screen and type <code>Terminal</code> -- you should see <code>Terminal</code> under <code>Applications</code>.)`\
`   * On Windows, you can use either the classic command prompt or the more modern PowerShell terminal. If you use Windows in desktop mode, run the <code>cmd</code> or <code>powershell</code> command from the Start menu. If you use the Windows 8 start screen instead, simply type <code>cmd</code> or <code>powershell</code>, and then run either the &quot;Command Prompt&quot; or &quot;Windows Powershell&quot; application.`\
`   * On Linux, there are many possible configurations, depending on what desktop environment you're using:`\
`   ** In Unity, use the search function on the <code>Dash</code>, and search for <code>Terminal</code>. Or, use the keyboard shortcut <code>Ctrl-Alt-T</code>.`\
`   ** In Gnome, go to <code>Applications</code>, then <code>Accessories</code>, and select <code>Terminal</code>, or use <code>Ctrl-Alt-T</code>.`\
`   ** In XFCE, go to <code>Applications</code>, then <code>System</code>, then <code>Terminal</code>, or use <code>Super-T</code>.`\
`   ** In KDE, go to <code>KMenu</code>, then <code>System</code>, then <code>Terminal Program (Konsole)</code>.`

`   You should now see a rectangle with a &quot;prompt&quot; (possibly just a symbol like <code>%</code>, but probably including more information, such as your username and directory), and a blinking cursor.`

`   Let's verify that pandoc is installed. Type`

`   <code>pandoc —version</code>`\
`   and hit enter. You should see a message telling you which version of pandoc is installed, and giving you some additional information.`

`   == Step 3: Changing directories ==`

`   First, let's see where we are. Type`

`   <code>pwd</code>`\
`   on linux or OSX, or`

`   <code>echo %cd%</code>`\
`   on Windows, and hit enter. Your terminal should print your current working directory. (Guess what <code>pwd</code> stands for?) This should be your home directory.`

`   Let's navigate now to our <code>Documents</code> directory: type`

`   <code>cd Documents</code>`\
`   and hit enter. Now type`

`   <code>pwd</code>`\
`   (or <code>echo %cd%</code> on Windows) again. You should be in the <code>Documents</code> subdirectory of your home directory. To go back to your home directory, you could type`

`   <code>cd ..</code>`\
`   The <code>..</code> means &quot;one level up.&quot;`

`   Go back to your <code>Documents</code> directory if you're not there already. Let's try creating a subdirectory called <code>pandoc-test</code>:`

`   <code>mkdir pandoc-test</code>`\
`   Now change to the <code>pandoc-test</code> directory:`

`   <code>cd pandoc-test</code>`\
`   If the prompt doesn't tell you what directory you're in, you can confirm that you're there by doing`

`   <code>pwd</code>`\
`   (or <code>echo %cd%</code>) again.`

`   OK, that's all you need to know for now about using the terminal. But here's a secret that will save you a lot of typing. You can always type the up-arrow key to go back through your history of commands. So if you want to use a command you typed earlier, you don't need to type it again: just use up-arrow until it comes up. Try this. (You can use down-arrow as well, to go the other direction.) Once you have the command, you can also use the left and right arrows and the backspace/delete key to edit it.`

`   Most terminals also support tab completion of directories and filenames. To try this, let's first go back up to our <code>Documents</code> directory:`

`   <code>cd ..</code>`\
`   Now, type`

`   <code>cd pandoc-</code>`\
`   and hit the tab key instead of enter. Your terminal should fill in the rest (<code>test</code>), and then you can hit enter.`

`   To review:`

`   * <code>pwd</code> (or <code>echo %cd%</code> on Windows) to see what the current working directory is.`\
`   * <code>cd foo</code> to change to the <code>foo</code> subdirectory of your working directory.`\
`   * <code>cd ..</code> to move up to the parent of the working directory.`\
`   * <code>mkdir foo</code> to create a subdirectory called <code>foo</code> in the working directory.`\
`   * up-arrow to go back through your command history.`\
`   * tab to complete directories and file names.`

`   == Step 4: Using pandoc as a filter ==`

`   Type`

`   <code>pandoc</code>`\
`   and hit enter. You should see the cursor just sitting there, waiting for you to type something. Type this:`

`   <code>Hello *pandoc*!`

`   - one`\
`   - two</code>`\
`   When you're finished (the cursor should be at the beginning of the line), type <code>Ctrl-D</code> on OS X or Linux, or <code>Ctrl-Z</code> followed by <code>Enter</code> on Windows. You should now see your text converted to HTML!`

`   <code><p>Hello <em>pandoc</em>!</p>`\
`   <ul>`\
`   <li>one</li>`\
`   <li>two</li>`\
`   </ul></code>`\
`   What just happened? When pandoc is invoked without specifying any input files, it operates as a &quot;filter,&quot; taking input from the terminal and sending its output back to the terminal. You can use this feature to play around with pandoc.`

`   By default, input is interpreted as pandoc markdown, and output is HTML. But we can change that. Let's try converting `*`from`*` HTML `*`to`*` markdown:`

`   <code>pandoc -f html -t markdown</code>`\
`   Now type:`

`   <code><p>Hello <em>pandoc</em>!</p></code>`\
`   and hit <code>Ctrl-D</code> (or <code>Ctrl-Z</code> followed by <code>Enter</code> on Windows). You should see:`

`   <code>Hello *pandoc*!</code>`\
`   Now try converting something from markdown to LaTeX. What command do you think you should use?`

`   == Step 5: Text editor basics ==`

`   You'll probably want to use pandoc to convert a file, not to read text from the terminal. That's easy, but first we need to create a text file in our <code>pandoc-test</code> subdirectory.`

`   `**`Important:`**` To create a text file, you'll need to use a text editor, `*`not`*` a word processor like Microsoft Word. On Windows, you can use Notepad (in <code>Accessories</code>). On OS X, you can use <code>TextEdit</code> (in <code>Applications</code>). On Linux, different platforms come with different text editors: Gnome has <code>GEdit</code>, and KDE has <code>Kate</code>.`

`   Start up your text editor. Type the following:`

`   <code># Test!`

`   This is a test of *pandoc*.`

`   - list one`\
`   - list two</code>`\
`   Now save your file as <code>test1.md</code> in the directory <code>Documents/pandoc-test</code>.`

`   Note: If you use plain text a lot, you'll want a better editor than <code>Notepad</code> or <code>TextEdit</code>. You might want to look at `[`Sublime`` ``Text`](http://www.sublimetext.com/)` or (if you're willing to put in some time learning an unfamiliar interface) `[`Vim`](http://www.vim.org/)` or `[`Emacs`](http://www.gnu.org/software/emacs)`.`

`   == Step 6: Converting a file ==`

`   Go back to your terminal. We should still be in the <code>Documents/pandoc-test</code> directory. Verify that with <code>pwd</code>.`

`   Now type`

`   <code>ls</code>`\
`   (or <code>dir</code> if you're on Windows). This will list the files in the current directory. You should see the file you created, <code>test1.md</code>.`

`   To convert it to HTML, use this command:`

`   <code>pandoc test1.md -f markdown -t html -s -o test1.html</code>`\
`   The filename <code>test1.md</code> tells pandoc which file to convert. The <code>-s</code> option says to create a &quot;standalone&quot; file, with a header and footer, not just a fragment. And the <code>-o test1.html</code> says to put the output in the file <code>test1.html</code>. Note that we could have omitted <code>-f markdown</code> and <code>-t html</code>, since the default is to convert from markdown to HTML, but it doesn't hurt to include them.`

`   Check that the file was created by typing <code>ls</code> again. You should see <code>test1.html</code>. Now open this in a browser. On OS X, you can type`

`   <code>open test1.html</code>`\
`   On Windows, type`

`   <code>.\test1.html</code>`\
`   You should see a browser window with your document.`

`   To create a LaTeX document, you just need to change the command slightly:`

`   <code>pandoc test1.md -f markdown -t latex -s -o test1.tex</code>`\
`   Try opening <code>test1.tex</code> in your text editor.`

`   Pandoc can often figure out the input and output formats from the filename extensions. So, you could have just used:`

`   <code>pandoc test1.md -s -o test1.tex</code>`\
`   Pandoc knows you're trying to create a LaTeX document, because of the <code>.tex</code> extension.`

`   Now try creating a Word document (with extension <code>docx</code>).`

`   If you want to create a PDF, you'll need to have LaTeX installed. (See `[`MacTeX`](http://tug.org/mactex/)` on OS X, `[`MiKTeX`](http://miktex.org/)` on Windows, or install the texlive package in linux.) Then do`

`   <code>pandoc test1.md -s -o test1.pdf</code>`\
`   == Step 7: Command-line options ==`

`   You now know the basics. Pandoc has a lot of options. At this point you can start to learn more about them by reading the `[`User's`` ``Guide`](http://pandoc.org/README.html)`.`

`   Here's an example. The <code>-S</code> or <code>--smart</code> option (you can use either form) causes pandoc to produce curly quotes and proper dashes. Try it using pandoc as a filter. Type`

`   <code>pandoc --smart</code>`\
`   then enter this text, followed by <code>Ctrl-D</code> (<code>Ctrl-Z</code> followed by <code>Enter</code> on Windows):`

`   <code>`“`Hello`` ``there,`”` she said---and Sam didn't reply.</code>`\
`   Now try the same thing without <code>--smart</code>. See the difference in output?`

`   If you forget an option, or forget which formats are supported, you can always do`

`   <code>pandoc --help</code>`\
`   to get a list of all the supported options.`

`   On OS X or Linux systems, you can also do`

`   <code>man pandoc</code>`\
`   to get the pandoc manual page, or`

`   <code>man pandoc_markdown</code>`\
`   to get a description of pandoc's markdown syntax. All of this information is also in the User's Guide.`

`   If you get stuck, you can always ask questions on the `[`pandoc-discuss`](http://groups.google.com/group/pandoc-discuss)` mailing list. But be sure to check the `[`FAQs`](http://pandoc.org/faqs.html)` first, and search through the mailing list to see if your question has been answered before.`

<Category:FAQ> <Category:Resources> [Category:Cool
Tools](Category:Cool_Tools "wikilink")
